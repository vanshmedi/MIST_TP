# HTTP Source Code

**Task:** Find a password hidden within the HTML source code of a webpage.

**Methodology**

Open the webpage and inspect the HTML source (e.g., Ctrl+U in a browser or view-source).

Search for comment blocks (<!-- ... -->) and other hidden elements.

Found a comment containing the password.

_Comment found:_
`<!-- Solution: The password is nZ^&@q5&sjJHev0. -->`
**Solution**
`nZ^&@q5&sjJHev0`


# HTTP — IP Restriction Bypass

**Task:** Bypass an authentication mechanism that restricts access based on the client's IP address (internal LAN allowed without credentials).

**Methodology**

The challenge page indicated the public IP was outside the allowed LAN range and required authentication.

Spoof a private/internal IP address so the server believes the request originated from inside the LAN.

Looked up methods to spoof an IP address

Used the X-Forwarded-For HTTP header to inject a private IP address in Burp Suite

Used IP `192.168.0.0` as given in the refernce material

**Solution**
`Ip_$po0Fing`

# HTTP — User-Agent

**Task:** Manipulate the User-Agent string to gain access.

**Methodology**

Intercepted the HTTP request using Burp Suite

The hint suggested "Admin is really dumb..." — implying a simplistic check on User-Agent.

Replaced the original browser User-Agent with the literal string Admin.

` Welcome master!
Password: rr$Li9%L34qd1AAe27
`

**Solution**
`rr$Li9%L34qd1AAe27`

# HTTP Directory Indexing
**Task:** Find a password by exploiting directory indexing on the web server.

**Methodology**

Viewed page source `Ctrl+U` and found hints in HTML comments.

Navigated to the hinted path `/admin/pass.html` — saw a message to `"look further"`.

Visited `/admin/` — directory listing was enabled.

Found a `backup/` directory in the listing.

Entered `/admin/backup/` — listed files included `admin.txt`.

Opened `admin.txt` to reveal the password.

**Solution**
`LINUX`
